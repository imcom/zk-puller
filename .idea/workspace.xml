<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="e63c0d6f-07fd-4240-a09a-d227d1d6f482" name="Default" comment="">
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/GOPATH__zk_puller_.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/misc.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/modules.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/zk-puller.iml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/glide.lock" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/glide.yaml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/main.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/puller.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/.gitignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/bench_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/cluster.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/cluster_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/command.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/command_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/commands.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/commands_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/doc.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/example_instrumentation_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/example_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/export_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/consistenthash/consistenthash.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/consistenthash/consistenthash_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/error.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/hashtag/hashtag.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/hashtag/hashtag_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/internal.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/internal_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/log.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/once.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/pool/bench_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/pool/conn.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/pool/main_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/pool/pool.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/pool/pool_single.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/pool/pool_sticky.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/pool/pool_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/proto/proto_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/proto/reader.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/proto/reader_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/proto/scan.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/proto/scan_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/proto/write_buffer.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/proto/write_buffer_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/safe.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/unsafe.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/internal/util.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/iterator.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/iterator_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/main_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/options.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/options_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/parser.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/pipeline.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/pipeline_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/pool_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/pubsub.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/pubsub_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/race_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/redis.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/redis_context.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/redis_no_context.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/redis_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/result.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/ring.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/ring_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/script.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/sentinel.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/sentinel_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/testdata/redis.conf" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/tx.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/tx_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/universal.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/universal_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/golang/glog/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/golang/glog/README" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/golang/glog/glog.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/golang/glog/glog_file.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/golang/glog/glog_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/.gitignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/examples/basic.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/cluster_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/conn.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/constants.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/constants_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/dnshostprovider.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/dnshostprovider_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/flw.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/flw_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/lock.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/lock_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/server_help.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/server_java.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/structs.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/structs_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/throttle_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/util.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/util_test.go" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/zk_test.go" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="default_target" />
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file leaf-file-name="main.go" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/main.go">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="420">
              <caret line="28" column="0" lean-forward="true" selection-start-line="28" selection-start-column="0" selection-end-line="28" selection-end-column="0" />
              <folding>
                <element signature="e#14#86#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="README.md" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/README.md">
          <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
            <state split_layout="SPLIT">
              <first_editor relative-caret-position="15">
                <caret line="1" column="0" lean-forward="true" selection-start-line="1" selection-start-column="0" selection-end-line="1" selection-end-column="0" />
                <folding />
              </first_editor>
              <second_editor />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="puller.go" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/puller.go">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="75">
              <caret line="5" column="13" lean-forward="false" selection-start-line="5" selection-start-column="13" selection-end-line="5" selection-end-column="13" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/puller.go" />
        <option value="$PROJECT_DIR$/main.go" />
        <option value="$PROJECT_DIR$/README.md" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="ProjectFrameBounds">
    <option name="y" value="23" />
    <option name="width" value="2048" />
    <option name="height" value="1063" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="zk-puller" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="zk-puller" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="zk-puller" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="zk-puller" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="vendor" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="github.com" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
        </subPane>
      </pane>
      <pane id="Scope" />
      <pane id="Scratches" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="last_opened_file_path" value="$USER_HOME$" />
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="settings.editor.selected.configurable" value="go.sdk" />
    <property name="configurable.Global.GOPATH.is.expanded" value="true" />
    <property name="configurable.Project.GOPATH.is.expanded" value="true" />
    <property name="configurable.Module.GOPATH.is.expanded" value="false" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Single File.go run main.go">
    <configuration default="false" name="go run main.go" type="GoRunFileConfiguration" factoryName="Go Single File" temporary="true">
      <module name="zk-puller" />
      <working_directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method />
    </configuration>
    <configuration default="true" type="GoAppEngineRunConfiguration" factoryName="Go App Engine">
      <module name="zk-puller" />
      <working_directory value="$PROJECT_DIR$/" />
      <method />
    </configuration>
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="zk-puller" />
      <working_directory value="$PROJECT_DIR$/" />
      <go_parameters value="-i" />
      <filePath value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <package value="github.com/imcom/zk-puller" />
      <method />
    </configuration>
    <configuration default="true" type="GoRunFileConfiguration" factoryName="Go Single File">
      <module name="zk-puller" />
      <working_directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <method />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="zk-puller" />
      <working_directory value="$PROJECT_DIR$/" />
      <go_parameters value="-i" />
      <framework value="gotest" />
      <kind value="DIRECTORY" />
      <package value="github.com/imcom/zk-puller" />
      <method />
    </configuration>
    <configuration default="true" type="JavaScriptTestRunnerJest" factoryName="Jest">
      <node-interpreter value="project" />
      <working-dir value="" />
      <envs />
      <scope-kind value="ALL" />
      <method />
    </configuration>
    <configuration default="true" type="JavaScriptTestRunnerProtractor" factoryName="Protractor">
      <config-file value="" />
      <node-interpreter value="project" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="JavascriptDebugType" factoryName="JavaScript Debug">
      <method />
    </configuration>
    <configuration default="true" type="js.build_tools.gulp" factoryName="Gulp.js">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <gulpfile />
      <tasks />
      <arguments />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="js.build_tools.npm" factoryName="npm">
      <command value="run" />
      <scripts />
      <node-interpreter value="project" />
      <envs />
      <method />
    </configuration>
    <list size="1">
      <item index="0" class="java.lang.String" itemvalue="Go Single File.go run main.go" />
    </list>
    <recent_temporary>
      <list size="1">
        <item index="0" class="java.lang.String" itemvalue="Go Single File.go run main.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="23" width="2048" height="1063" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32997987" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="processedProjectFiles" value="true" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager />
    <watches-manager />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/main.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding>
            <element signature="e#14#86#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/puller.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="345">
          <caret line="23" column="0" lean-forward="true" selection-start-line="23" selection-start-column="0" selection-end-line="23" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.8.3/libexec/src/flag/flag.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="212">
          <caret line="700" column="5" lean-forward="false" selection-start-line="700" selection-start-column="5" selection-end-line="700" selection-end-column="5" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/glide.lock">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="240">
          <caret line="16" column="0" lean-forward="true" selection-start-line="16" selection-start-column="0" selection-end-line="16" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/glide.yaml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="30">
          <caret line="2" column="0" lean-forward="true" selection-start-line="2" selection-start-column="0" selection-end-line="2" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/vendor/github.com/go-redis/redis/redis.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="322">
          <caret line="332" column="5" lean-forward="false" selection-start-line="332" selection-start-column="5" selection-end-line="332" selection-end-column="5" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.8.3/libexec/src/net/url/url.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="322">
          <caret line="338" column="4" lean-forward="false" selection-start-line="338" selection-start-column="4" selection-end-line="338" selection-end-column="4" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/constants.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="439">
          <caret line="96" column="0" lean-forward="true" selection-start-line="96" selection-start-column="0" selection-end-line="96" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/vendor/github.com/go-redis/redis/commands.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="322">
          <caret line="753" column="59" lean-forward="true" selection-start-line="753" selection-start-column="59" selection-end-line="753" selection-end-column="59" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/vendor/github.com/samuel/go-zookeeper/zk/conn.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="212">
          <caret line="907" column="15" lean-forward="false" selection-start-line="907" selection-start-column="15" selection-end-line="907" selection-end-column="15" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/puller.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="75">
          <caret line="5" column="13" lean-forward="false" selection-start-line="5" selection-start-column="13" selection-end-line="5" selection-end-column="13" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/main.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="420">
          <caret line="28" column="0" lean-forward="true" selection-start-line="28" selection-start-column="0" selection-end-line="28" selection-end-column="0" />
          <folding>
            <element signature="e#14#86#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor relative-caret-position="15">
            <caret line="1" column="0" lean-forward="true" selection-start-line="1" selection-start-column="0" selection-end-line="1" selection-end-column="0" />
            <folding />
          </first_editor>
          <second_editor />
        </state>
      </provider>
    </entry>
  </component>
</project>